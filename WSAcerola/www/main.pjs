int STATE_STOP = 0;
int STATE_PLAY = 1;
int STATE_PAUSE = 2;
int START_ANGLE = 270;
int starttime;
int pausetime;
int timertime;
int exceedtime;
bool iscountdown;
int state;
PFont font;

void setup() {
  size(1024, 1024);
  font = loadFont("sans-serif");
  state = STATE_STOP;
  timertime = 60;
  background(255);
  frameRate(20);
  noFill();
}

void playpause() {
  switch(state){
    case STATE_STOP:
      // stop -> play
      state = STATE_PLAY;
      starttime = millis();
      break;
    case STATE_PLAY:
      // play -> pause
      state = STATE_PAUSE;
      pausetime = millis() - starttime;
      break;
    case STATE_PAUSE:
      // pause -> play
      state = STATE_PLAY;
      starttime = millis() - pausetime;
      break;
  }
}

int getState() {
  return state;
}

void setTimerTime(int value) {
  timertime = int(value);
  reset();
}

void setExceedTime(int value){
  exceedtime = int(value);
}

void setCountdown(bool value){
  iscountdown = value;
}

void reset() {
  switch(state){
    case STATE_STOP:
      // noop
      break;
    case STATE_PLAY:
      // play継続
      starttime = millis();
      break;
    case STATE_PAUSE:
      // ポーズ時間をリセット
      pausetime = 0;
      break;
  }
}

String makeText(int time) {
  return floor(time / 60) + ":" + (time % 60 < 10 ? "0" : "") + floor(time % 60);
}

void draw() {
  float wh = width / 2;
  float hh = height / 2;
  int wp = width / 10;
  int wc = width - wp;
  int hc = height - wp;
  color fg;
  background(255);
  smooth();
  noFill();
  // 背景
  strokeWeight(wp);
  stroke(#02133a);
  ellipse(wh, hh, wc, hc);
  // 値設定
  float time;
  switch(state){
    case STATE_STOP:
      time = 0;
      drawText = "STOP";
      break;
    case STATE_PLAY:
      time = (millis() - starttime) / 1000;
      drawText = "";
      break;
    case STATE_PAUSE:
      time = pausetime / 1000;
      drawText = "";
      break;
  }
  if (drawText == "") {
    // 時刻表現文字列作成
    if(time < timertime){
      if(iscountdown){
        drawText = makeText(timertime - time);
      }else{
        drawText = makeText(time);
      }
    }else{
      drawText = makeText(time - timertime);
    }
  }
  float per;
  if(time < timertime){
    // 1周目
    fg = #7799dd;
    per = 1 - time / timertime;
  }else if(time < timertime + exceedtime){
    // 2周目
    fg = #dd9977;
    per = 1 - (time - timertime) / exceedtime;
  }
  if(per <= 0){
    state = STATE_STOP;
    refreshAppBar();
  }

  if(state != STATE_STOP){
    // 前景描画
    stroke(fg);
    arc(wh, hh, wc, hc, radians(START_ANGLE), radians(START_ANGLE + 360 * per));
    jsframe(time, timertime, exceedtime,  per);
  }
  // テキスト
  fill(fg);
  textAlign(CENTER, CENTER);
  textFont(font, width / drawText.length());
  text(drawText, wh, hh);
}
